<?php

namespace MainBundle\Controller;

use MainBundle\Form\EtablissementType;
use MainBundle\Form\ModifEtablissementType;
use MainBundle\Form\ModifPhotoEtablissementType;
use MainBundle\Form\NomEtablissementType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;
use MainBundle\Entity\Etablissement;

class EtablissementController extends Controller
{
    public function AjoutAction(Request $request)
    {
        $etablissement=new Etablissement();
        $form=$this->createForm(EtablissementType::class,$etablissement);
        $form->handleRequest($request);
        if($form->isValid() && $form->isSubmitted())
        {
            /** @var UploadedFile $image */
            $image=$etablissement->getImagePrincipale();
            $imageName = $this->generateUniqueFileName().'.'.$image->guessExtension();
            $image->move($this->getParameter('brochures_directory'), $imageName);
            $etablissement->setImagePrincipale($imageName);
            $em=$this->getDoctrine()->getManager();
            $em->persist($etablissement);
            $em->flush();
            return $this->redirectToRoute('Afficher_Etablissement_Admin');
        }

        return $this->render('MainBundle:Admin:Ajouter_Etablissement.html.twig',
            array('e' => $form->createView()));
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    public function AfficheAction()
    {
        $em=$this->getDoctrine()->getManager();
        $etablissement=$em->getRepository("MainBundle:Etablissement")->findAll();
        return $this->render('MainBundle:Admin:Afficher_Etablissement.html.twig',
            array('eta'=>$etablissement));
    }

    public function AfficheIdAction($id)
    {
        $em=$this->getDoctrine()->getManager();
        $etablissement=$em->getRepository("MainBundle:Etablissement")->find($id);
        return $this->render('MainBundle:Admin:Afficher_Etablissement_ParId.html.twig',
            array('etab'=>$etablissement));
    }

    public function ModifAction(Request $request,$id)
    {
        $em = $this->getDoctrine()->getManager();
        $etablissement = $em->getRepository("MainBundle:Etablissement")->find($id);
        $etablissement->setImagePrincipale
        (new File($this->getParameter('brochures_directory').'/'.$etablissement->getImagePrincipale()));

        $form = $this->createForm(ModifEtablissementType::class, $etablissement);
        $form->handleRequest($request);
        if ($form->isValid() && $form->isSubmitted())
        {
            $image=$etablissement->getImagePrincipale();
            $imageName = $this->generateUniqueFileName().'.'.$image->guessExtension();
            $image->move($this->getParameter('brochures_directory'), $imageName);
            $etablissement->setImagePrincipale($imageName);
            $em->persist($etablissement);
            $em->flush();
            return $this->redirectToRoute('Afficher_Etablissement_Client', array('id' => $id));
        }
        return $this->render('MainBundle:Representant:Modifier_Etablissement_Representant.html.twig',
            array('et' => $form->createView(),'nom'=>$etablissement->getNom()));
    }

    public function ModifPhotoAction(Request $request,$id)
    {
        $em = $this->getDoctrine()->getManager();
        $etablissement = $em->getRepository("MainBundle:Etablissement")->find($id);
        $etablissement->setImagePrincipale
        (new File($this->getParameter('brochures_directory').'/'.$etablissement->getImagePrincipale()));
        $form = $this->createForm(ModifPhotoEtablissementType::class, $etablissement);
        $form->handleRequest($request);
        if ($form->isValid() && $form->isSubmitted())
        {
            $image=$etablissement->getImagePrincipale();
            $imageName = $this->generateUniqueFileName().'.'.$image->guessExtension();
            $image->move($this->getParameter('brochures_directory'), $imageName);
            $etablissement->setImagePrincipale($imageName);
            $em->persist($etablissement);
            $em->flush();
            return $this->redirectToRoute('Afficher_Etablissement_Client', array('id' => $id));
        }
        return $this->render('MainBundle:Representant:Modifier_Etablissement_Photo.html.twig',
            array('etabl' => $form->createView(),'nom'=>$etablissement->getNom()));
    }

    public function SuppAction($id)
    {
        $em=$this->getDoctrine()->getManager();
        $etablissement=$em->getRepository("MainBundle:Etablissement")->find($id);
        $em->remove($etablissement);
        $em->flush();
        return $this->redirectToRoute('Afficher_Etablissement_Admin');
    }

    public function FiltreAction($critere)
    {
        $em=$this->getDoctrine()->getManager();
        $etablissements=$em->getRepository("MainBundle:Etablissement")->FiltrerDQL($critere);
        return $this->render("MainBundle:Admin:Afficher_Etablissement.html.twig", array('eta'=>$etablissements));
    }

    public function TriAction($critere)
    {
        $em=$this->getDoctrine()->getManager();
        if ($critere=='HOA')
        {
            $etablissements = $em->getRepository("MainBundle:Etablissement")->findBy([],array('horaireOuverture'=>'ASC'));
        }
        elseif ($critere=='HFD')
        {
            $etablissements = $em->getRepository("MainBundle:Etablissement")->findBy([],array('horaireFermeture'=>'DESC'));
        }
        elseif ($critere=='BMA')
        {
            $etablissements = $em->getRepository("MainBundle:Etablissement")->findBy([],array('budgetmoyen'=>'ASC'));
        }
        elseif ($critere=='BMD')
        {
            $etablissements = $em->getRepository("MainBundle:Etablissement")->findBy([],array('budgetmoyen'=>'DESC'));
        }
        else
        {
            $etablissements=$em->getRepository("MainBundle:Etablissement")->findAll();
        }
        return $this->render("MainBundle:Admin:Afficher_Etablissement.html.twig", array('eta'=>$etablissements));
    }

    public function RechercheAction(Request $request)
    {
        $em=$this->getDoctrine()->getManager();
        if ($request->isMethod('POST'))
        {
            $nom = $request->get('abc');
            $etablissements=$em->getRepository("MainBundle:Etablissement")->RechercherDQL($nom);
            return $this->render("MainBundle:Admin:Afficher_Etablissement.html.twig", array('eta'=>$etablissements));
        }
    }

    public function AjoutCAction(Request $request)
    {
        $etablissement=new Etablissement();
        $form=$this->createForm(EtablissementType::class,$etablissement);
        $form->handleRequest($request);
        if($form->isValid() && $form->isSubmitted())
        {
            /** @var UploadedFile $image */
            $image=$etablissement->getImagePrincipale();
            $imageName = $this->generateUniqueFileName().'.'.$image->guessExtension();
            $image->move($this->getParameter('brochures_directory'), $imageName);
            $etablissement->setImagePrincipale($imageName);
            $em=$this->getDoctrine()->getManager();
            $em->persist($etablissement);
            $em->flush();
            return $this->redirectToRoute('main_homepage');
        }

        return $this->render('MainBundle:Etablissement:ajouter.html.twig',
            array('e' => $form->createView()));
    }

    public function AfficheAccueilAction()
    {
        $em=$this->getDoctrine()->getManager();
        $etablissement=$em->getRepository("MainBundle:Etablissement")->findAll();
        $etablissementr=$em->getRepository("MainBundle:Etablissement")->findBy(array('type'=>'Resto_CafÃ©'));
        return $this->render('MainBundle::LayoutFront.html.twig',
            array('eta'=>$etablissement,'eta1'=>$etablissementr));
    }

    public function AfficheCAction($id)
    {
        $em=$this->getDoctrine()->getManager();
        $etablissement=$em->getRepository("MainBundle:Etablissement")->find($id);
        return $this->render('MainBundle:Etablissement:afficher.html.twig',
            array('etab'=>$etablissement));
    }

    public function RechercherCAction($critere)
    {
        $em=$this->getDoctrine()->getManager();
        $etablissements=$em->getRepository("MainBundle:Etablissement")->FiltrerDQL($critere);
        return $this->render("MainBundle:Etablissement:Rechercher_Etablissement_Client.html.twig", array('eta'=>$etablissements,'critere'=>$critere));
    }

    public function TriCAction($critere1,$critere2)
    {
        $em=$this->getDoctrine()->getManager();
        if ($critere1=='HOA')
        {
            $etablissements = $em->getRepository("MainBundle:Etablissement")->findBy(array('type'=>$critere2),array('horaireOuverture'=>'ASC'));
        }
        elseif ($critere1=='HFD')
        {
            $etablissements = $em->getRepository("MainBundle:Etablissement")->findBy(array('type'=>$critere2),array('horaireFermeture'=>'DESC'));
        }
        elseif ($critere1=='BMA')
        {
            $etablissements = $em->getRepository("MainBundle:Etablissement")->findBy(array('type'=>$critere2),array('budgetmoyen'=>'ASC'));
        }
        elseif ($critere1=='BMD')
        {
            $etablissements = $em->getRepository("MainBundle:Etablissement")->findBy(array('type'=>$critere2),array('budgetmoyen'=>'DESC'));
        }
        else
        {
            $etablissements=$em->getRepository("MainBundle:Etablissement")->findAll();
        }
        return $this->render("MainBundle:Etablissement:Rechercher_Etablissement_Client.html.twig", array('eta'=>$etablissements,'critere'=>$critere2));
    }

    public function RechercheCNAction(Request $request,$critere2)
    {
        $em=$this->getDoctrine()->getManager();
        if ($request->isMethod('POST'))
        {
            $nom = $request->get('abc');
            $etablissements=$em->getRepository("MainBundle:Etablissement")->RechercherCNDQL($nom,$critere2);
            return $this->render("MainBundle:Etablissement:Rechercher_Etablissement_Client.html.twig", array('eta'=>$etablissements,'critere'=>$critere2));
        }
    }
}
